import React, { useState } from 'react';
import { FaArrowLeft } from 'react-icons/fa';
import { FaAngleLeft, FaAngleRight } from 'react-icons/fa6';
import { IoCloseSharp } from 'react-icons/io5';
import { useNavigate } from 'react-router-dom';

import ExercicioItems from '../data/ListaDeExerciciosItems';

import Exemplo01 from '../../../public/img/Exemplo01.png';
import Megaphone from '../../../public/img/megaphone.png';

export function Exercicio() {
  const [showDicas, setShowDicas] = useState(false);
  const [showCodigoApoio, setShowCodigoApoio] = useState(false);
  const [showSimplificarProblema, setShowSimplificarProblema] = useState(false);
  const [showSintaxe, setShowSintaxe] = useState(false);
  const [showDescricaoDetalhada, setShowDescricaoDetalhada] = useState(false);

  const navigate = useNavigate(); // Hook para navegação programática

  const handleCloseModal = (setter) => () => {
    setter(false);
    setShowSimplificarProblema(false);
    setShowSintaxe(false);
    setShowDescricaoDetalhada(false);
  };

  return (
    <div>
      <div className="absolute top-[19px] left-[15px] text-[#0E7886] w-[135px] flex flex-col items-center">
        <a href="/Listas-De-Exercicios-01" className="flex flex-col items-center">
          <FaArrowLeft className="w-10 h-10" />
          <p>Retornar ao Início</p>
        </a>
      </div>

      <div className="absolute top-[115px] left-[61px]">
        <div className="bg-[#FFFFFF] w-[1150px] h-[550px] flex">
          <div className="flex-grow p-5">
            <div className="mb-5">
              <h1 className="text-[#0E7886] text-2xl font-semibold mb-5">
                Exercício 01 - Hello World!
              </h1>
              <p className="w-[600px]">
                O Hello World é uma frase que todo programador apresenta como sinal de sucesso de seu primeiro programa. Vamos manter o objetivo, mas com uma execução diferente. Crie um programa que apresente 4 vezes a frase “Hello, World!”, cada qual de uma forma distinta, conforme a saída abaixo.
              </p>
            </div>

            <div className="space-y-5">
              <div className="mb-5">
                <h1 className="text-[#0E7886] text-2xl font-semibold mb-5">
                  Precisa de Ajuda?
                </h1>
                <p className="w-[600px]">
                  Consulte abaixo o conteúdo auxiliar preparado especialmente para você =]
                </p>
              </div>

              <div className="space-x-8">
                <button
                  className="bg-[#0E7886] w-[170px] h-[41px] text-white"
                  onClick={() => setShowDicas(!showDicas)}
                >
                  Dicas
                </button>
                <button
                  className="bg-[#0E7886] w-[170px] h-[41px] text-white"
                  onClick={() => setShowCodigoApoio(!showCodigoApoio)}
                >
                  Código de Apoio
                </button>
                <button 
                  className="bg-[#0E7886] w-[170px] h-[41px] text-white"
                  onClick={() => navigate('/Material-de-Apoio')} // Navegação para a página
                >
                  Material de Apoio
                </button>
              </div>
            </div>
          </div>

          <div className="bg-black w-[550px] h-[550px]"></div>
        </div>

        <div className="mt-10 flex justify-center">
          <div className="flex text-white shadow-lg">
            <button className="w-[400px] h-[60px] bg-white text-gray-400 flex items-center justify-center">
              <h2 className="flex items-center space-x-2">
                <FaAngleLeft />
                <span>Anterior</span>
              </h2>
            </button>

            <button className="w-[400px] h-[60px] bg-green-600 flex items-center justify-center">
              <h2 className="flex items-center space-x-2">
                <span>Próximo</span>
                <FaAngleRight />
              </h2>
            </button>
          </div>
        </div>
      </div>

      <div className="absolute right-0 bg-[#302D2DCC] w-[220px] h-[800px]">
        <div className="text-white p-4">
          <p>Lista de Exercícios 01</p>
          <h1 className="text-xl">Introdução à Linguagem C</h1>
        </div>

        {/* <div className="bg-white h-[115px] border-2 border-[#707070]">
          <p className="bg-[#0E7886] text-white px-2">Atual</p>
          <div className="p-2">
            <p className="text-gray-400">Exercício 01</p>
            <h1 className="text-xl">Hello World!</h1>
          </div>
        </div> */}

        
          {ExercicioItems.map((item, index) => (
          <button className="bg-[#302D2D] h-[115px] w-[220px] border-2 border-[#707070]">
            <div className="p-2">
              <p className="text-gray-400">Exercício {item.numero}</p>
              <h1 className="text-xl text-white">{item.titulo}</h1>
            </div>
          </button>
          ))}
        

        
      </div>

      {showDicas && (
        <div className="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center">
          <div className={`absolute w-[1000px] ${showSimplificarProblema || showSintaxe || showDescricaoDetalhada ? 'h-auto' : 'h-[240px]'} bg-white shadow-lg text-black`}>
            <h1 className="text-2xl font-semibold bg-[#0E7886] text-white h-[51px] flex items-center p-5">
              Dicas
            </h1>
            <p className="p-5">
              Consulte aqui as dicas especialmente preparadas para auxiliar-lhe na resolução do exercício 01.
            </p>
            <div className="p-5 flex px-40 space-x-40">
              <button
                className="w-[120px] h-[41px] text-[#0E7886]"
                onClick={() => {
                  setShowSimplificarProblema(!showSimplificarProblema);
                  setShowSintaxe(false);
                  setShowDescricaoDetalhada(false);
                }}
              >
                Simplificando o 
                <strong className="text-xl"> Problema</strong>
              </button>
              <button
                className="w-[120px] h-[41px] text-[#0E7886]"
                onClick={() => {
                  setShowSintaxe(!showSintaxe);
                  setShowSimplificarProblema(false);
                  setShowDescricaoDetalhada(false);
                }}
              >
                Entendendo a 
                <strong className="text-xl"> Sintaxe</strong>
              </button>
              <button
                className="w-[120px] h-[41px] text-[#0E7886]"
                onClick={() => {
                  setShowDescricaoDetalhada(!showDescricaoDetalhada);
                  setShowSimplificarProblema(false);
                  setShowSintaxe(false);
                }}
              >
                Descrição
                <strong className="text-xl"> Detalhada</strong>
              </button>
            </div>

            {showSimplificarProblema && (
              <div className="p-5">
                <h2 className="relative bg-[#0E7886] text-white w-40 px-4 text-xl">Dica 01</h2>
                <p className="p-5">
                  Para realizar uma quebra de linha, utilize o comando \n.<br />
                </p>
                <p className="px-5">
                  Por exemplo: o comando printf("Exemplo\n01"); imprime a seguinte saída:<br />
                </p>
                <div className="flex justify-center m-5 italic">
                  <img 
                    src={Exemplo01} 
                    alt="Exemplo01" 
                  />
                </div>
              </div>
            )}

            {showSintaxe && (
              <div className="p-5">
                <div className="p-5">
                  <p>
                    <strong>1. Função print()</strong>
                  </p>
                  <p className="px-5">
                    Está contida na biblioteca stidio.h e possibilita ao programador apresentar na tela os valores resultantes de expressões, variáveis ou simplistemente uma caddeia de caracteres (sting). Sua sintaxe possui duas forma:
                  </p>
                  <p className="flex justify-center m-5 italic">
                    printf("cadeia_de_caracteres"); <br />
                    printf("expressão_de_controle", argumentos);<br />
                  </p>
                </div>
              </div>
            )}

            {showDescricaoDetalhada && (
              <div className="flex flex-col items-center p-5">
                <img 
                  src={Megaphone} 
                  alt="Megaphone" 
                  className="w-24 mb-2" 
                />
                <p className="text-center">
                  Nossa equipe de nerds não cadastrou nenhuma dica para esse quesito =[<br />
                </p>
              </div>
            )}

            <button
              onClick={handleCloseModal(setShowDicas)}
              className="absolute top-[-10px] right-[-10px] w-8 h-8 bg-red-700 text-white flex items-center justify-center"
            >
              <IoCloseSharp className="w-8 h-8" />
            </button>
          </div>
        </div>
      )}

      {showCodigoApoio && (
        <div className="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center">
          <div className="absolute w-[1273px] h-auto bg-white shadow-lg z-50 text-black">
            <h1 className="text-xl bg-[#0E7886] text-white h-[51px] flex items-center p-5">
              Código de Apoio
            </h1>
            <div className="p-5">
              <p>
                Consulte abaixo a resolução de um algoritmo que envolve passos similares aos quais você usará em suas resoluções.
              </p>

              <h2 className="relative bg-[#0E7886] text-white w-72 px-4 text-xl mt-5">
                4 Operações Matemáticas
              </h2>

              <p className="mt-5">
                Construa um algoritmo que represente as 4 operações básicas da matemática.
              </p>

              <div className="border-[1px] border-black h-auto p-2 mt-5">
                <p>
                  Codigo 
                </p>
              </div>

            </div>
            <button
              onClick={handleCloseModal(setShowCodigoApoio)}
              className="absolute top-[-10px] right-[-10px] w-8 h-8 bg-red-700 text-white flex items-center justify-center"
            >
              <IoCloseSharp className="w-8 h-8" />
            </button>
          </div>
        </div>
      )}
    </div>
  );
}
